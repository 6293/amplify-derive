name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install rust nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt
      - name: Build & test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'
      - id: coverage
        name: Generate coverage
        uses: actions-rs/grcov@v0.1.5
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ${{ steps.coverage.outputs.report }}
          directory: ./coverage/reports/
      - uses: actions-rs/cargo@v1
        name: Lints
        with:
          command: fmt
          args: --all -- --check
  matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: [ nightly, beta, stable, 1.46.0 ]
        feature: [ serde, std, async, tor, never_type ]
    steps:
      - uses: actions/checkout@v2
      - name: Install rust ${{matrix.toolchain}}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{matrix.toolchain}}
          override: true
      - name: All features
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features
      - name: No features
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --no-default-features
      - name: Feature ${{matrix.feature}}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --no-default-features --features=${{matrix.feature}}
      - name: Defaults + ${{matrix.feature}}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --no-default-features --features=${{matrix.feature}}
